name: SonarCloud + GPT + Comparación + Iteraciones

on:
  push:
    branches:
      - main

jobs:
  sonar-gpt-review:
    name: Análisis, Mejora y Comparación
    runs-on: ubuntu-latest
    env:
      MAX_ITERACIONES_CI: 5

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache de Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Compilar y testear el proyecto
        run: mvn clean verify

      - name: Análisis original con SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=rodrigorojasg_testSpring \
            -Dsonar.organization=rodrigorojasg \
            -Dsonar.projectName="testSpring Original" \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: Guardar reporte original
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" > reporte_original.json

      - name: Detectar archivos con errores
        run: |
          jq -r '.issues[].component' reporte_original.json | sort -u > archivos_afectados.txt

      - name: Llamar a OpenAI por cada archivo afectado
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          iter=1
          echo "ITERACION_ACTUAL=$iter" >> $GITHUB_ENV
          mkdir -p reportes_ci

          while read COMPONENT; do
            FILE=$(echo "$COMPONENT" | sed 's/^rodrigorojasg_testSpring://')
            if [ -f "$FILE" ]; then
              CODE=$(base64 "$FILE" | tr -d '\n')
              REPORT="Problemas detectados por SonarCloud en $COMPONENT"
              RESPONSE_FILE="reportes_ci/gpt_response_$(basename $FILE .java).json"

              curl -s https://api.openai.com/v1/chat/completions \
                -H "Authorization: Bearer $OPENAI_API_KEY" \
                -H "Content-Type: application/json" \
                -d '{
                  "model": "gpt-4",
                  "messages": [
                    {"role": "system", "content": "Eres un asistente experto en Java Spring Boot que mejora código según problemas de calidad."},
                    {"role": "user", "content": "Este es el código fuente en base64: '"$CODE"'. A continuación, los problemas reportados por SonarCloud: '"$REPORT"'. Corrige el código aplicando mejoras que aborden los problemas mencionados, manteniendo la lógica intacta. ⚠️ IMPORTANTE: responde únicamente con el código fuente corregido, sin ningún texto adicional, comentario o encabezado."}
                  ],
                  "temperature": 0.3
                }' > "$RESPONSE_FILE"

              jq -r '.choices[0].message.content' "$RESPONSE_FILE" > "${FILE%.java}.mejorado.java"
            fi
          done < archivos_afectados.txt

      - name: Preparar carpeta src-analizado
        run: |
          mkdir -p src-analizado/main/java
          for f in $(find . -name "*.mejorado.java"); do
            destino="src-analizado/$(echo $f | cut -d/ -f2- | sed 's/\.mejorado//')"
            mkdir -p $(dirname "$destino")
            cp "$f" "$destino"
          done

      - name: Análisis con SonarCloud del código mejorado
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=rodrigorojasg_testSpring_gpt \
            -Dsonar.organization=rodrigorojasg \
            -Dsonar.projectName="testSpring GPT Mejorado" \
            -Dsonar.sources=src-analizado/main/java \
            -Dsonar.tests=src/test \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: Guardar reporte mejorado
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring_gpt&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" > reporte_mejorado.json

      - name: Comparar resultados por severidad y hacer commit si mejora
        run: |
          echo "📊 Comparación de severidades:"
          original=$(jq '[.issues[] | {severity}] | group_by(.severity) | map({severity: .[0].severity, count: length})' reporte_original.json)
          mejorado=$(jq '[.issues[] | {severity}] | group_by(.severity) | map({severity: .[0].severity, count: length})' reporte_mejorado.json)

          echo "ANTES: $original"
          echo "DESPUÉS: $mejorado"

          puntuacion() {
            jq -r 'map((.severity | ascii_downcase) as $s | {blocker: 5, critical: 4, major: 3, minor: 2, info: 1}[$s] * .count) | add' <<< "$1"
          }

          puntaje_original=$(puntuacion "$original")
          puntaje_mejorado=$(puntuacion "$mejorado")

          echo "PUNTAJE_ANTES=$puntaje_original"
          echo "PUNTAJE_DESPUES=$puntaje_mejorado"

          if [ "$puntaje_mejorado" -lt "$puntaje_original" ]; then
            echo "✅ Se detectó mejora, haciendo commit..."
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"

            mkdir -p ci-reportes/iteracion-$ITERACION_ACTUAL
            cp reporte_*.json ci-reportes/iteracion-$ITERACION_ACTUAL/
            cp reportes_ci/* ci-reportes/iteracion-$ITERACION_ACTUAL/ || true

            git add ci-reportes/ src/**/*.mejorado.java || true
            git commit -m "🤖 Iteración $ITERACION_ACTUAL: mejora aplicada y reportes guardados"
            git push origin main
          else
            echo "⛔ No se detectó mejora significativa en severidad, no se realiza commit."
          fi

