name: SonarCloud + GPT + Comparaci√≥n

on:
  push:
    branches:
      - main

jobs:
  sonar-gpt-review:
    name: An√°lisis y mejora autom√°tica
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache de Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Compilar y testear el proyecto
        run: mvn clean verify

      - name: An√°lisis inicial con SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=rodrigorojasg_testSpring \
            -Dsonar.organization=rodrigorojasg \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: Guardar reporte original de SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" > reporte_original.json

      - name: Consultar archivos afectados desde SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" |
            jq -r '.issues[].component' | sort -u > archivos_afectados.txt

      - name: Enviar archivos a OpenAI para mejora
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          while read COMPONENT; do
            FILE=$(echo "$COMPONENT" | sed 's/^rodrigorojasg_testSpring://')
            echo "Procesando: $FILE"

            if [ -f "$FILE" ]; then
              CODE=$(base64 "$FILE" | tr -d '\n')
              REPORT="Problemas detectados por SonarCloud en $COMPONENT"

              RESPONSE_FILE="gpt_response_$(basename $FILE .java).json"
              curl -s https://api.openai.com/v1/chat/completions \
                -H "Authorization: Bearer $OPENAI_API_KEY" \
                -H "Content-Type: application/json" \
                -d '{
                  "model": "gpt-4",
                  "messages": [
                    {"role": "system", "content": "Eres un asistente experto en Java Spring Boot que mejora c√≥digo seg√∫n problemas de calidad."},
                    {"role": "user", "content": "Este es el c√≥digo (en base64): '"$CODE"'\n\nObservaciones Sonar: '"$REPORT"'."}
                  ],
                  "temperature": 0.3
                }' > "$RESPONSE_FILE"

              if jq -e '.choices[0].message.content' "$RESPONSE_FILE" > /dev/null 2>&1; then
                jq -r '.choices[0].message.content' "$RESPONSE_FILE" > "${FILE%.java}.mejorado.java"
                echo "‚úÖ Guardado: ${FILE%.java}.mejorado.java"
              else
                echo "‚ùå Error con $FILE - respuesta inv√°lida"
                cat "$RESPONSE_FILE"
              fi
            else
              echo "‚ö†Ô∏è Archivo no encontrado: $FILE"
            fi
          done < archivos_afectados.txt

      - name: Reemplazar archivos originales por versiones mejoradas
        run: |
          for f in $(find . -name "*.mejorado.java"); do
            original="${f%.mejorado.java}.java"
            echo "üîÅ Reemplazando $original con versi√≥n mejorada"
            mv "$f" "$original"
          done

      - name: Segundo an√°lisis SonarCloud con c√≥digo mejorado
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=rodrigorojasg_testSpring \
            -Dsonar.organization=rodrigorojasg \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: Guardar reporte posterior de SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" > reporte_corregido.json

      - name: Comparar errores antes y despu√©s
        run: |
          echo "üìä Comparaci√≥n de errores Sonar:"
          echo "Antes de GPT:"
          jq '.issues | group_by(.severity) | map({severity: .[0].severity, count: length})' reporte_original.json

          echo ""
          echo "Despu√©s de GPT:"
          jq '.issues | group_by(.severity) | map({severity: .[0].severity, count: length})' reporte_corregido.json

