name: SonarCloud + GPT para Spring Boot

on:
  push:
    branches:
      - main

jobs:
  sonar-gpt-review:
    name: An√°lisis y revisi√≥n con GPT
    runs-on: ubuntu-latest
    env:
      MAX_ITERACIONES_CI: 5

    steps:
      - name: Checkout del c√≥digo
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cach√© de Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Compilar y testear el proyecto
        run: mvn clean verify

      - name: An√°lisis original con SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "üîç Ejecutando an√°lisis Sonar original..."
          mvn sonar:sonar \
            -Dsonar.projectKey=rodrigorojasg_testSpring \
            -Dsonar.organization=rodrigorojasg \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=src/main/java \
            -Dsonar.tests=src/test/java \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.java.test.binaries=target/test-classes

          echo "‚ö†Ô∏è  An√°lisis finalizado. Extrayendo severidades..."
          errores_antes=$(grep -o 'severity":"[A-Z]\+"' salida_sonar_original.txt | wc -l || true)
          echo "ERRORES_ANTES=$errores_antes" >> $GITHUB_ENV

      - name: Obtener archivos con errores
        id: sonar_files
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" | \
            jq -r '.issues[].component' | sort -u > archivos_afectados.txt

      - name: Mejoras con GPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p reportes_ci
          iteracion=1
          echo "ITERACION_ACTUAL=$iteracion" >> $GITHUB_ENV

          while read COMPONENT; do
            FILE=$(echo "$COMPONENT" | sed 's/^rodrigorojasg_testSpring://')
            echo "Procesando: $FILE"

            if [ -f "$FILE" ]; then
              CODE=$(base64 "$FILE" | tr -d '\n')
              REPORT="Problemas detectados por SonarCloud en $COMPONENT"
              RESPONSE_FILE="reportes_ci/gpt_response_$(basename $FILE .java).json"

              curl -s https://api.openai.com/v1/chat/completions \
                -H "Authorization: Bearer $OPENAI_API_KEY" \
                -H "Content-Type: application/json" \
                -d '{
                  "model": "gpt-4",
                  "messages": [
                    {"role": "system", "content": "Eres un experto en Java Spring Boot. Recibir√°s un archivo en base64 y una descripci√≥n de los errores SonarCloud. Tu √∫nica tarea es devolver el c√≥digo Java corregido, completo, compilable y sin encabezados explicativos. No incluyas ning√∫n texto adicional. Solo el c√≥digo fuente Java."},
                    {"role": "user", "content": "C√≥digo en base64:\n\n'"$CODE"'\n\nErrores SonarCloud:\n\n'"$REPORT"'\n\nDevuelve solo el c√≥digo Java corregido. NO EXPLIQUES NADA."}
                  ],
                  "temperature": 0.3
                }' > "$RESPONSE_FILE"

              jq -r '.choices[0].message.content' "$RESPONSE_FILE" > "${FILE%.java}.mejorado.java"
              echo "Guardado: ${FILE%.java}.mejorado.java"
            else
              echo "Archivo no encontrado: $FILE"
            fi
          done < archivos_afectados.txt

      - name: An√°lisis de c√≥digo mejorado
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Contenido actual:"
          ls -la

          if [ ! -d src ]; then
            echo "‚ùå No se encontr√≥ el directorio src/"
            exit 1
          fi

          cp -r src src-analizado

          for f in $(find src-analizado -name "*.mejorado.java"); do
            mv "$f" "${f%.mejorado.java}.java"
          done

          echo "üîç Ejecutando an√°lisis con c√≥digo mejorado..."
          mvn sonar:sonar \
            -Dsonar.projectKey=rodrigorojasg_testSpring_gpt \
            -Dsonar.organization=rodrigorojasg \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.sources=src-analizado/main/java \
            -Dsonar.tests=src-analizado/test/java \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.java.test.binaries=target/test-classes \
            -Dsonar.login=$SONAR_TOKEN > salida_sonar_gpt.txt || true

          echo "‚åõ Esperando que SonarCloud procese los resultados..."
          sleep 15

          echo "üì• Consultando n√∫mero de errores en SonarCloud..."
          errores_despues=$(curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring_gpt&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" | jq '.total // 0')

          echo "ERRORES_DESPUES=$errores_despues" >> $GITHUB_ENV


      - name: Commit autom√°tico si hay mejora
        run: |
          echo "Comparaci√≥n de errores:"
          echo "ERRORES_ANTES=$ERRORES_ANTES"
          echo "ERRORES_DESPUES=$ERRORES_DESPUES"

          if [ "$ERRORES_DESPUES" -lt "$ERRORES_ANTES" ]; then
            echo "‚úÖ Mejora detectada, realizando commit..."

            git config user.name "github-actions"
            git config user.email "github-actions@github.com"

            iter_dir="ci-reportes/iteracion-${ITERACION_ACTUAL}"
            mkdir -p "$iter_dir"
            cp salida_sonar_original.txt "$iter_dir/sonar_original.txt" || true
            cp salida_sonar_gpt.txt "$iter_dir/sonar_mejorado.txt" || true
            cp reportes_ci/* "$iter_dir/" || true

            git add ci-reportes/
            git add src/**/*.mejorado.java || true
            git commit -m "ü§ñ Iteraci√≥n ${ITERACION_ACTUAL}: mejora aplicada y reportes guardados"
            git push origin main
          else
            echo "‚õî No se detect√≥ mejora, no se realiza commit."
          fi

