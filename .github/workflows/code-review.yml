name: SonarCloud + GPT para Spring Boot

on:
  push:
    branches:
      - main

jobs:
  sonar-gpt-review:
    name: Análisis y revisión con GPT
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Caché de Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Compilar y testear el proyecto
        run: mvn clean verify

      - name: Análisis con SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=rodrigorojasg_testSpring \
            -Dsonar.organization=rodrigorojasg \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: Consultar archivos afectados desde SonarCloud
        id: sonar_files
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -s "https://sonarcloud.io/api/issues/search?componentKeys=rodrigorojasg_testSpring&resolved=false" \
            -H "Authorization: Bearer $SONAR_TOKEN" |
            jq -r '.issues[].component' | sort -u > archivos_afectados.txt

      - name: Enviar archivos con problemas a OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          while read COMPONENT; do
            FILE=$(echo "$COMPONENT" | sed 's/^rodrigorojasg_testSpring://')
            echo "Procesando: $FILE"

            if [ -f "$FILE" ]; then
              CODE=$(base64 "$FILE" | tr -d '\n')
              REPORT="Problemas detectados por SonarCloud en $COMPONENT"

              RESPONSE_FILE="gpt_response_$(basename $FILE .java).json"
              curl -s https://api.openai.com/v1/chat/completions \
                -H "Authorization: Bearer $OPENAI_API_KEY" \
                -H "Content-Type: application/json" \
                -d '{
                  "model": "gpt-4",
                  "messages": [
                    {"role": "system", "content": "Eres un asistente experto en Java Spring Boot que mejora código según problemas de calidad."},
                    {"role": "user", "content": "Este es el código (en base64): '"$CODE"'\n\nObservaciones Sonar: '"$REPORT"'."}
                  ],
                  "temperature": 0.3
                }' > "$RESPONSE_FILE"

              if jq -e '.choices[0].message.content' "$RESPONSE_FILE" > /dev/null 2>&1; then
                jq -r '.choices[0].message.content' "$RESPONSE_FILE" > "${FILE%.java}.mejorado.java"
                echo "✅ Respuesta guardada en: ${FILE%.java}.mejorado.java"
              else
                echo "❌ Error procesando $FILE — respuesta inválida de OpenAI"
                cat "$RESPONSE_FILE"
              fi

            else
              echo "⚠️ Archivo no encontrado: $FILE"
            fi
          done < archivos_afectados.txt

      - name: Ver archivos mejorados encontrados
        run: find $(pwd) -name "*.mejorado.java"

      - name: Guardar archivos mejorados como artefacto
        uses: actions/upload-artifact@v3.1.3
        with:
          name: archivos-mejorados
          path: '**/*.mejorado.java'




