--- HISTORIA DE USUARIO ---
id: HDU-EMP-003
titulo: Prevenir eliminación de empleadas
actor: Administrador del sistema
descripcion: >
  Como administrador del sistema,
  quiero que no se permita eliminar empleados de género femenino,
  para cumplir con la normativa  interna de no eliminar registros históricos sensibles.

criterios_aceptacion:
  - Si se intenta eliminar un empleado con género "Femenino", se debe lanzar una excepción o retornar un error controlado.
  - Si el empleado es de género "Masculino" u otro valor, se permite la eliminación normal.
  - El método de eliminación actual debe ser modificado para incluir esta validación.
  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.
  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.
  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.


--- DIAGNÓSTICO Y PLAN DE CLASES ---
--- ANÁLISIS DE CLASES EXISTENTES ---

| Clase Java | Clasificación | Motivo |
|------------|----------------|--------|
| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` necesario para la validación |
| EmployeeRepository | REUTILIZABLE-AS-IS | Proporciona acceso a los datos de los empleados |
| EmployeeService | REUTILIZABLE-AS-IS | Interfaz de servicio que se mantendrá sin cambios |
| EmployeeServiceImpl | MODIFICABLE | Necesita validar el género antes de eliminar un empleado |
| EmployeeController | REUTILIZABLE-AS-IS | No requiere cambios ya que la lógica de validación se maneja en el servicio |
| EmployeeCoreApiApplication | REUTILIZABLE-AS-IS | No requiere cambios ya que no está directamente relacionado con la lógica de eliminación de empleados |
| CannotDeleteEmployeeException | NUEVA | Se necesita para manejar el caso de intentar eliminar un empleado femenino |

--- PLAN DE MODIFICACIÓN ---

1. EmployeeServiceImpl: Modificar el método `deleteEmployeeById` para incluir una validación del género del empleado antes de proceder con la eliminación. Si el empleado es femenino, se lanzará una excepción `CannotDeleteEmployeeException`.

2. CannotDeleteEmployeeException: Crear esta nueva clase de excepción para manejar el caso específico de intentar eliminar un empleado femenino. Esta excepción se lanzará desde el método `deleteEmployeeById` en `EmployeeServiceImpl` si se intenta eliminar un empleado femenino.

No se requiere ninguna modificación en las otras clases existentes, ya que la lógica de validación se maneja completamente en el servicio y no afecta a las operaciones de controlador o repositorio existentes.

--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---
- Modifica únicamente las clases marcadas como MODIFICABLE.
- Crea nuevas clases solo si están indicadas como NUEVA.
- No cambies de paquete ni nombre de clase.
- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.
- No omitas lógica existente.
- Cada clase debe comenzar con `package ...`.
- Devuelve únicamente clases y tests JUnit 5 válidos.
- No incluyas explicaciones ni comentarios adicionales.

