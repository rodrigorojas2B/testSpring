--- HISTORIA DE USUARIO ---
id: HDU-EMP-003
titulo: Prevenir eliminación de empleadas
actor: Administrador del sistema
descripcion: >
  Como administrador del sistema,
  quiero que no se permita eliminar empleados de género femenino,
  para cumplir con la normativa  interna de no eliminar registros históricos sensibles.

criterios_aceptacion:
  - Si se intenta eliminar un empleado con género "Femenino", se debe lanzar una excepción o retornar un error controlado.
  - Si el empleado es de género "Masculino" u otro valor, se permite la eliminación normal.
  - El método de eliminación actual debe ser modificado para incluir esta validación.
  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.
  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.
  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.


--- DIAGNÓSTICO Y PLAN DE CLASES ---
--- ANÁLISIS DE CLASES EXISTENTES ---

| Clase Java | Clasificación | Motivo |
|------------|----------------|--------|
| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` que es necesario para la nueva validación. |
| EmployeeRepository | REUTILIZABLE-AS-IS | Se utiliza para realizar operaciones CRUD en la base de datos. |
| EmployeeService | REUTILIZABLE-AS-IS | Interfaz que define los métodos del servicio de empleados. |
| EmployeeServiceImpl | MODIFICABLE | Implementación del servicio de empleados donde se debe agregar la nueva validación antes de eliminar. |
| EmployeeController | REUTILIZABLE-AS-IS | Controlador que maneja las solicitudes HTTP. No necesita cambios ya que la nueva validación se realiza en el servicio. |
| EmployeeCoreApiApplication | REUTILIZABLE-AS-IS | Clase principal de la aplicación. No necesita cambios. |

--- PLAN DE MODIFICACIÓN ---

1. Clase `EmployeeServiceImpl`: Modificar el método `deleteEmployeeById` para agregar una validación antes de eliminar un empleado. Si el empleado es de género femenino, lanzar una excepción.

2. Crear una nueva clase `CannotDeleteEmployeeException` que extienda de `RuntimeException`. Esta excepción se lanzará cuando se intente eliminar un empleado de género femenino.

3. Crear una prueba unitaria para el método modificado `deleteEmployeeById` en la clase `EmployeeServiceImpl`. Esta prueba debe verificar que se lanza la excepción `CannotDeleteEmployeeException` cuando se intenta eliminar un empleado de género femenino.

--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---
- Modifica únicamente las clases marcadas como MODIFICABLE.
- Crea nuevas clases solo si están indicadas como NUEVA.
- No cambies de paquete ni nombre de clase.
- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.
- No omitas lógica existente.
- Cada clase debe comenzar con `package ...`.
- Devuelve únicamente clases y tests JUnit 5 válidos.
- No incluyas explicaciones ni comentarios adicionales.

