--- HISTORIA DE USUARIO ---
id: HDU-EMP-003
titulo: Prevenir eliminación de empleadas
actor: Administrador del sistema
descripcion: >
  Como administrador del sistema,
  quiero que no se permita eliminar empleados de género femenino,
  para cumplir con la normativa interna de  no eliminar registros históricos sensibles.

criterios_aceptacion:
  - Si se intenta eliminar un empleado con género "Femenino", se debe lanzar una excepción o retornar un error controlado.
  - Si el empleado es de género "Masculino" u otro valor, se permite la eliminación normal.
  - El método de eliminación actual debe ser modificado para incluir esta validación.
  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.
  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.
  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.


--- DIAGNÓSTICO Y PLAN DE CLASES ---
--- ANÁLISIS DE CLASES EXISTENTES ---

| Clase Java | Package | Clasificación | Motivo |
|------------|---------|----------------|--------|
| Employee | test.core.api.model | REUTILIZABLE-AS-IS | Contiene atributo `gender` |
| EmployeeRepository | test.core.api.repository | REUTILIZABLE-AS-IS | Se utiliza para realizar operaciones CRUD en la entidad Employee |
| EmployeeService | test.core.api.service | REUTILIZABLE-AS-IS | Interfaz de servicio que define los métodos para la entidad Employee |
| EmployeeServiceImpl | test.core.api.service.impl | MODIFICABLE | Debe validar antes de borrar |
| EmployeeController | test.core.api.controller | REUTILIZABLE-AS-IS | Controlador que maneja las solicitudes HTTP para la entidad Employee |
| EmployeeCoreApiApplication | test.core.api | REUTILIZABLE-AS-IS | Clase principal de la aplicación |
| CannotDeleteEmployeeException | test.core.api.exception | NUEVA | Requerida para lanzar excepción cuando se intenta eliminar un empleado femenino |

--- PLAN DE MODIFICACIÓN ---

1. Crear una nueva excepción `CannotDeleteEmployeeException` en el paquete `test.core.api.exception`. Esta excepción se lanzará cuando se intente eliminar un empleado femenino.

2. Modificar la clase `EmployeeServiceImpl` en el paquete `test.core.api.service.impl`. En el método `deleteEmployeeById`, antes de eliminar el empleado, se debe verificar si el empleado es femenino. Si es así, se debe lanzar la excepción `CannotDeleteEmployeeException`.

3. Crear pruebas unitarias para validar la nueva lógica en `EmployeeServiceImpl`. Las pruebas deben asegurarse de que la excepción `CannotDeleteEmployeeException` se lance cuando se intente eliminar un empleado femenino y que los empleados masculinos puedan ser eliminados normalmente.

--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---
- Modifica únicamente las clases marcadas como MODIFICABLE.
- Crea nuevas clases solo si están indicadas como NUEVA.
- No cambies de paquete ni nombre de clase.
- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.
- No omitas lógica existente.
- Cada clase debe comenzar con `package ...`.
- Devuelve únicamente clases y tests JUnit 5 válidos.
- No incluyas explicaciones ni comentarios adicionales.

