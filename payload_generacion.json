{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "Eres un generador de código Java experto en Spring Boot. Cada clase que modifiques debe incluir todos sus métodos existentes reales, no los resumas ni los reemplaces por comentarios. NO USES '// Other methods...' NI NINGÚN COMENTARIO QUE OMITE MÉTODOS. Si modificas una clase, incluye su código completo, con todos los métodos existentes intactos más los nuevos o modificados. No inventes clases nuevas salvo que estén marcadas como NUEVA en el análisis. No incluyas texto fuera del código. Cada clase debe comenzar con 'package ...'."
    },
    {
      "role": "user",
      "content": "--- HISTORIA DE USUARIO ---\nid: HDU-EMP-003\ntitulo: Prevenir eliminación de empleadas\nactor: Administrador del sistema\ndescripcion: >\n  Como administrador del sistema,\n  quiero que no se permita eliminar empleados de género femenino,\n  para cumplir con la normativa interna de no eliminar registros históricos sensibles.\n\ncriterios_aceptacion:\n  - Si se intenta eliminar un empleado con género \"Femenino\", se debe lanzar una excepción o retornar un error controlado.\n  - Si el empleado es de género \"Masculino\" u otro valor, se permite la eliminación normal.\n  - El método de eliminación actual debe ser modificado para incluir esta validación.\n  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.\n  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.\n  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.\n\n\n--- DIAGNÓSTICO Y PLAN DE CLASES ---\n--- ANÁLISIS DE CLASES EXISTENTES ---\n\n| Clase Java | Clasificación | Motivo |\n|------------|----------------|--------|\n| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` que es necesario para la nueva validación. |\n| EmployeeRepository | REUTILIZABLE-AS-IS | Se utiliza para buscar y eliminar empleados. |\n| EmployeeService | REUTILIZABLE-AS-IS | Interfaz que define el método `deleteEmployeeById(Long id)` que necesita ser modificado. |\n| EmployeeServiceImpl | MODIFICABLE | Implementa el método `deleteEmployeeById(Long id)` que necesita ser modificado para incluir la nueva validación. |\n| EmployeeController | REUTILIZABLE-AS-IS | Controlador que utiliza el servicio de empleado, no necesita ser modificado. |\n\n--- PLAN DE MODIFICACIÓN ---\n\n1. Clase `EmployeeServiceImpl`: Modificar el método `deleteEmployeeById(Long id)` para incluir una validación antes de eliminar un empleado. Si el empleado es de género femenino, se debe lanzar una excepción.\n\n2. Crear una nueva clase `CannotDeleteEmployeeException` que extienda de `RuntimeException`. Esta excepción se lanzará cuando se intente eliminar un empleado de género femenino.\n\n3. No se necesita modificar ninguna otra clase existente ni crear nuevas clases.\n\n4. Es necesario crear pruebas unitarias para verificar que la nueva validación funciona correctamente. Las pruebas deben cubrir los siguientes casos: \n   - Intentar eliminar un empleado de género femenino y verificar que se lanza la excepción `CannotDeleteEmployeeException`.\n   - Intentar eliminar un empleado de género masculino y verificar que se puede eliminar sin problemas.\n   - Intentar eliminar un empleado con un género no especificado y verificar que se puede eliminar sin problemas.\n\n--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---\n- Modifica únicamente las clases marcadas como MODIFICABLE.\n- Crea nuevas clases solo si están indicadas como NUEVA.\n- No cambies de paquete ni nombre de clase.\n- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.\n- No omitas lógica existente.\n- Cada clase debe comenzar con `package ...`.\n- Devuelve únicamente clases y tests JUnit 5 válidos.\n- No incluyas explicaciones ni comentarios adicionales.\n\n"
    }
  ],
  "temperature": 0.3
}
