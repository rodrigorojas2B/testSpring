{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "Eres un generador de código Java experto en Spring Boot. Cuando modifiques una clase, debes incluir todo el contenido original de esa clase tal como aparece en el repositorio, incluyendo todos los métodos existentes, incluso si no se modifican. No está permitido usar comentarios como '// Other methods...' ni omitir partes del código original. No inventes clases nuevas salvo que estén marcadas como NUEVA en el análisis. No incluyas texto fuera del código. Cada clase debe comenzar con 'package ...'."
    },
    {
      "role": "user",
      "content": "--- HISTORIA DE USUARIO ---\nid: HDU-EMP-003\ntitulo: Prevenir eliminación de empleadas\nactor: Administrador del sistema\ndescripcion: >\n  Como administrador del sistema,\n  quiero que no se permita eliminar empleados de género femenino,\n  para cumplir con la normativa  interna de no eliminar registros históricos sensibles.\n\ncriterios_aceptacion:\n  - Si se intenta eliminar un empleado con género \"Femenino\", se debe lanzar una excepción o retornar un error controlado.\n  - Si el empleado es de género \"Masculino\" u otro valor, se permite la eliminación normal.\n  - El método de eliminación actual debe ser modificado para incluir esta validación.\n  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.\n  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.\n  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.\n\n\n--- DIAGNÓSTICO Y PLAN DE CLASES ---\n--- ANÁLISIS DE CLASES EXISTENTES ---\n\n| Clase Java | Clasificación | Motivo |\n|------------|----------------|--------|\n| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` necesario para la validación |\n| EmployeeRepository | REUTILIZABLE-AS-IS | Se utiliza para la consulta y eliminación de empleados |\n| EmployeeService | REUTILIZABLE-AS-IS | Interfaz de servicio que contiene el método a modificar |\n| EmployeeServiceImpl | MODIFICABLE | Implementación del servicio donde se debe agregar la validación |\n| EmployeeController | REUTILIZABLE-AS-IS | Controlador que utiliza el servicio de empleados, no requiere cambios |\n| EmployeeCoreApiApplication | REUTILIZABLE-AS-IS | Clase principal de la aplicación, no requiere cambios |\n\n--- PLAN DE MODIFICACIÓN ---\n\n1. Clase `EmployeeServiceImpl`: Se modificará el método `deleteEmployeeById(Long id)` para agregar la validación requerida. Antes de eliminar el empleado, se consultará el empleado por su id y se verificará si su género es \"Femenino\". Si es así, se lanzará una excepción `CannotDeleteEmployeeException`. \n\n2. Clase `CannotDeleteEmployeeException`: Se creará esta nueva clase de excepción para manejar el caso en que se intente eliminar un empleado de género femenino. Esta excepción extenderá de `RuntimeException` y tendrá un constructor que acepte un mensaje de error.\n\n3. Pruebas unitarias: Se deberán crear pruebas unitarias para el método modificado `deleteEmployeeById(Long id)` en `EmployeeServiceImpl`. Estas pruebas deberán cubrir los casos en que el empleado a eliminar es de género femenino, de género masculino u otro, y cuando el empleado no existe.\n\n--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---\n- Modifica únicamente las clases marcadas como MODIFICABLE.\n- Crea nuevas clases solo si están indicadas como NUEVA.\n- No cambies de paquete ni nombre de clase.\n- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.\n- No omitas lógica existente.\n- Cada clase debe comenzar con `package ...`.\n- Devuelve únicamente clases y tests JUnit 5 válidos.\n- No incluyas explicaciones ni comentarios adicionales.\n\n"
    }
  ],
  "temperature": 0.3
}
