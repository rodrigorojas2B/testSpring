{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "Eres un generador de código Java experto en Spring Boot. Cuando modifiques una clase, debes incluir todo el contenido original de esa clase tal como aparece en el repositorio, incluyendo todos los métodos existentes, incluso si no se modifican. No está permitido usar comentarios como '// Other methods...' ni omitir partes del código original. No inventes clases nuevas salvo que estén marcadas como NUEVA en el análisis. No incluyas texto fuera del código. Cada clase debe comenzar con 'package ...'."
    },
    {
      "role": "user",
      "content": "--- HISTORIA DE USUARIO ---\nid: HDU-EMP-003\ntitulo: Prevenir eliminación de empleadas\nactor: Administrador del sistema\ndescripcion: >\n  Como administrador del sistema,\n  quiero que no se permita eliminar empleados de género femenino,\n  para cumplir con la normativa  interna de no eliminar registros históricos sensibles.\n\ncriterios_aceptacion:\n  - Si se intenta eliminar un empleado con género \"Femenino\", se debe lanzar una excepción o retornar un error controlado.\n  - Si el empleado es de género \"Masculino\" u otro valor, se permite la eliminación normal.\n  - El método de eliminación actual debe ser modificado para incluir esta validación.\n  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.\n  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.\n  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.\n\n\n--- DIAGNÓSTICO Y PLAN DE CLASES ---\n--- ANÁLISIS DE CLASES EXISTENTES ---\n\n| Clase Java | Clasificación | Motivo |\n|------------|----------------|--------|\n| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` necesario para la validación |\n| EmployeeRepository | REUTILIZABLE-AS-IS | Proporciona acceso a los datos de los empleados |\n| EmployeeService | REUTILIZABLE-AS-IS | Interfaz de servicio que se mantendrá sin cambios |\n| EmployeeServiceImpl | MODIFICABLE | Necesita validar el género antes de eliminar un empleado |\n| EmployeeController | REUTILIZABLE-AS-IS | No requiere cambios ya que la lógica de validación se maneja en el servicio |\n| EmployeeCoreApiApplication | REUTILIZABLE-AS-IS | No requiere cambios ya que no está directamente relacionado con la lógica de eliminación de empleados |\n| CannotDeleteEmployeeException | NUEVA | Se necesita para manejar el caso de intentar eliminar un empleado femenino |\n\n--- PLAN DE MODIFICACIÓN ---\n\n1. EmployeeServiceImpl: Modificar el método `deleteEmployeeById` para incluir una validación del género del empleado antes de proceder con la eliminación. Si el empleado es femenino, se lanzará una excepción `CannotDeleteEmployeeException`.\n\n2. CannotDeleteEmployeeException: Crear esta nueva clase de excepción para manejar el caso específico de intentar eliminar un empleado femenino. Esta excepción se lanzará desde el método `deleteEmployeeById` en `EmployeeServiceImpl` si se intenta eliminar un empleado femenino.\n\nNo se requiere ninguna modificación en las otras clases existentes, ya que la lógica de validación se maneja completamente en el servicio y no afecta a las operaciones de controlador o repositorio existentes.\n\n--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---\n- Modifica únicamente las clases marcadas como MODIFICABLE.\n- Crea nuevas clases solo si están indicadas como NUEVA.\n- No cambies de paquete ni nombre de clase.\n- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.\n- No omitas lógica existente.\n- Cada clase debe comenzar con `package ...`.\n- Devuelve únicamente clases y tests JUnit 5 válidos.\n- No incluyas explicaciones ni comentarios adicionales.\n\n"
    }
  ],
  "temperature": 0.3
}
