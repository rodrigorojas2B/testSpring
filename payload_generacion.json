{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "Eres un generador de código Java experto en Spring Boot. Cuando modifiques una clase, debes incluir todo el contenido original de esa clase tal como aparece en el repositorio, incluyendo todos los métodos existentes, incluso si no se modifican. No está permitido usar comentarios como '// Other methods...' ni omitir partes del código original. No inventes clases nuevas salvo que estén marcadas como NUEVA en el análisis. No incluyas texto fuera del código. Cada clase debe comenzar con 'package ...'."
    },
    {
      "role": "user",
      "content": "--- HISTORIA DE USUARIO ---\nid: HDU-EMP-003\ntitulo: Prevenir eliminación de empleadas\nactor: Administrador del sistema\ndescripcion: >\n  Como administrador del sistema,\n  quiero que no se permita eliminar empleados de género femenino,\n  para cumplir con la normativa  interna de no eliminar registros históricos sensibles.\n\ncriterios_aceptacion:\n  - Si se intenta eliminar un empleado con género \"Femenino\", se debe lanzar una excepción o retornar un error controlado.\n  - Si el empleado es de género \"Masculino\" u otro valor, se permite la eliminación normal.\n  - El método de eliminación actual debe ser modificado para incluir esta validación.\n  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.\n  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.\n  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.\n\n\n--- DIAGNÓSTICO Y PLAN DE CLASES ---\n--- ANÁLISIS DE CLASES EXISTENTES ---\n\n| Clase Java | Clasificación | Motivo |\n|------------|----------------|--------|\n| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` |\n| EmployeeServiceImpl | MODIFICABLE | Debe validar antes de borrar |\n| CannotDeleteEmployeeException | NUEVA | Requerida por funcionalidad nueva |\n\n--- PLAN DE MODIFICACIÓN ---\n\n1. Clase `Employee`: No se requiere ninguna modificación en esta clase. Ya contiene el atributo `gender` que necesitamos para la validación.\n\n2. Clase `EmployeeServiceImpl`: Esta clase necesita ser modificada. Específicamente, el método `deleteEmployeeById(Long id)`. Antes de eliminar un empleado, debemos verificar si el género del empleado es \"Femenino\". Si es así, debemos lanzar una excepción.\n\n3. Clase `CannotDeleteEmployeeException`: Esta es una nueva clase que necesitamos crear. Esta excepción personalizada se lanzará cuando se intente eliminar un empleado de género \"Femenino\". \n\n--- CÓDIGO A GENERAR ---\n\n1. Clase `EmployeeServiceImpl` modificada:\n\n```java\npackage test.core.api.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport test.core.api.exception.CannotDeleteEmployeeException;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\nimport test.core.api.service.EmployeeService;\n\n@Service\npublic class EmployeeServiceImpl implements EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Override\n    public void deleteEmployeeById(Long id) {\n        // Start of AI modification\n        Employee employee = employeeRepository.findById(id).orElse(null);\n        if (employee != null && \"Femenino\".equals(employee.getGender())) {\n            throw new CannotDeleteEmployeeException(\"Cannot delete female employee with id: \" + id);\n        }\n        // End of AI modification\n        employeeRepository.deleteById(id);\n    }\n\n    // Other existing methods...\n}\n```\n\n2. Nueva clase `CannotDeleteEmployeeException`:\n\n```java\npackage test.core.api.exception;\n\npublic class CannotDeleteEmployeeException extends RuntimeException {\n    public CannotDeleteEmployeeException(String message) {\n        super(message);\n    }\n}\n```\n\n3. Test unitario para la nueva funcionalidad:\n\n```java\npackage test.core.api.service.impl;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport test.core.api.exception.CannotDeleteEmployeeException;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\n\npublic class EmployeeServiceImplTest {\n\n    @Autowired\n    private EmployeeServiceImpl employeeService;\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Test\n    public void deleteFemaleEmployeeThrowsException() {\n        Employee femaleEmployee = new Employee();\n        femaleEmployee.setGender(\"Femenino\");\n        femaleEmployee = employeeRepository.save(femaleEmployee);\n\n        assertThrows(CannotDeleteEmployeeException.class, () -> employeeService.deleteEmployeeById(femaleEmployee.getId()));\n    }\n}\n```\n\n--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---\n- Modifica únicamente las clases marcadas como MODIFICABLE.\n- Crea nuevas clases solo si están indicadas como NUEVA.\n- No cambies de paquete ni nombre de clase.\n- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.\n- No omitas lógica existente.\n- Cada clase debe comenzar con `package ...`.\n- Devuelve únicamente clases y tests JUnit 5 válidos.\n- No incluyas explicaciones ni comentarios adicionales.\n\n"
    }
  ],
  "temperature": 0.3
}
