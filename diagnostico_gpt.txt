--- ANÁLISIS DE CLASES EXISTENTES ---

| Clase Java | Clasificación | Motivo |
|------------|----------------|--------|
| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` necesario para la validación |
| EmployeeRepository | REUTILIZABLE-AS-IS | Se utiliza para realizar operaciones CRUD en la base de datos |
| EmployeeService | REUTILIZABLE-AS-IS | Interfaz que define los métodos del servicio |
| EmployeeServiceImpl | MODIFICABLE | Implementación de EmployeeService, necesita modificarse para agregar la validación |
| EmployeeController | REUTILIZABLE-AS-IS | Controlador que maneja las solicitudes HTTP, no necesita modificaciones |
| EmployeeCoreApiApplication | REUTILIZABLE-AS-IS | Clase principal de la aplicación, no necesita modificaciones |
| CannotDeleteEmployeeException | NUEVA | Excepción personalizada para manejar el intento de eliminación de empleados femeninos |

--- PLAN DE MODIFICACIÓN ---

1. Clase EmployeeServiceImpl: Modificar el método deleteEmployeeById para agregar la validación del género del empleado antes de la eliminación. Si el empleado es femenino, lanzar la excepción CannotDeleteEmployeeException.

2. Clase CannotDeleteEmployeeException: Crear una nueva excepción personalizada que se lanzará cuando se intente eliminar un empleado femenino. Esta excepción extenderá RuntimeException y tendrá un constructor que aceptará un mensaje de error.

Nota: No se requiere la creación de pruebas unitarias en este caso, ya que la modificación no implica lógica compleja que necesite ser probada. Sin embargo, se recomienda realizar pruebas de integración para asegurar que la validación funciona correctamente en el contexto de la aplicación completa.
