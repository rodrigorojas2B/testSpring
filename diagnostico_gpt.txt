--- ANÁLISIS DE CLASES EXISTENTES ---

| Clase Java | Package | Clasificación | Motivo |
|------------|---------|----------------|--------|
| Employee | test.core.api.model | REUTILIZABLE-AS-IS | Contiene atributo `birthDate` necesario para la nueva funcionalidad |
| EmployeeRepository | test.core.api.repository | REUTILIZABLE-AS-IS | Se puede extender para agregar un nuevo método de búsqueda |
| EmployeeCoreApiApplication | test.core.api | REUTILIZABLE-AS-IS | No requiere cambios |
| EmployeeController | test.core.api.controller | MODIFICABLE | Necesita un nuevo endpoint para obtener empleados nacidos antes del año 2000 |
| EmployeeService | test.core.api.service | MODIFICABLE | Necesita un nuevo método para obtener empleados nacidos antes del año 2000 |
| EmployeeServiceImpl | test.core.api.service.impl | MODIFICABLE | Necesita implementar el nuevo método de EmployeeService |

--- PLAN DE MODIFICACIÓN ---

1. EmployeeRepository: Agregar un nuevo método `List<Employee> findByBirthDateBefore(LocalDate date);` para buscar empleados nacidos antes de una fecha específica.

2. EmployeeService: Agregar un nuevo método `List<Employee> getEmployeesBornBeforeYear(int year);` para obtener empleados nacidos antes de un año específico.

3. EmployeeServiceImpl: Implementar el nuevo método `getEmployeesBornBeforeYear(int year)` utilizando el nuevo método en EmployeeRepository.

4. EmployeeController: Agregar un nuevo endpoint `@GetMapping("/born-before/{year}")` que utilice el nuevo método en EmployeeService para obtener empleados nacidos antes de un año específico.

5. Crear pruebas unitarias para los nuevos métodos en EmployeeServiceImpl y EmployeeController.
