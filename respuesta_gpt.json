{
  "id": "chatcmpl-BgN0UBQoR54mAvFSPwNUoZeZIDmBG",
  "object": "chat.completion",
  "created": 1749437914,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "--- CÃ“DIGO JAVA ---\n\n```java\npackage test.core.api.repository;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport test.core.api.model.Employee;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\npublic interface EmployeeRepository extends JpaRepository<Employee, Long> {\n    List<Employee> findByBirthDateBefore(LocalDate date);\n}\n```\n\n```java\npackage test.core.api.service;\n\nimport test.core.api.model.Employee;\n\nimport java.util.List;\n\npublic interface EmployeeService {\n    List<Employee> getAllEmployees();\n    List<Employee> getEmployeesBornBeforeYear(int year);\n}\n```\n\n```java\npackage test.core.api.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\nimport test.core.api.service.EmployeeService;\n\nimport java.time.LocalDate;\nimport java.time.ZoneId;\nimport java.util.List;\n\n@Service\npublic class EmployeeServiceImpl implements EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Override\n    public List<Employee> getAllEmployees() {\n        return employeeRepository.findAll();\n    }\n\n    @Override\n    public List<Employee> getEmployeesBornBeforeYear(int year) {\n        LocalDate date = LocalDate.of(year, 1, 1);\n        return employeeRepository.findByBirthDateBefore(date);\n    }\n}\n```\n\n```java\npackage test.core.api.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/api/employees\")\npublic class EmployeeController {\n\n    @Autowired\n    private EmployeeService employeeService;\n\n    @GetMapping\n    public List<Employee> getAllEmployees() {\n        return employeeService.getAllEmployees();\n    }\n\n    @GetMapping(\"/born-before/{year}\")\n    public List<Employee> getEmployeesBornBeforeYear(@PathVariable int year) {\n        return employeeService.getEmployeesBornBeforeYear(year);\n    }\n}\n```\n\n```java\npackage test.core.api.service.impl;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\n\nimport java.time.LocalDate;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\n@SpringBootTest\npublic class EmployeeServiceImplTest {\n\n    @InjectMocks\n    private EmployeeServiceImpl employeeService;\n\n    @Mock\n    private EmployeeRepository employeeRepository;\n\n    @Test\n    public void testGetEmployeesBornBeforeYear() {\n        Employee emp1 = new Employee();\n        emp1.setBirthDate(LocalDate.of(1990, 1, 1));\n        Employee emp2 = new Employee();\n        emp2.setBirthDate(LocalDate.of(1995, 1, 1));\n        when(employeeRepository.findByBirthDateBefore(LocalDate.of(2000, 1, 1))).thenReturn(Arrays.asList(emp1, emp2));\n\n        List<Employee> result = employeeService.getEmployeesBornBeforeYear(2000);\n\n        assertEquals(2, result.size());\n        assertEquals(emp1, result.get(0));\n        assertEquals(emp2, result.get(1));\n    }\n}\n```\n\n```java\npackage test.core.api.controller;\n\nimport org.junit.jupiter.api.Test;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.boot.test.mock.mockito.MockBean;\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\n\nimport java.time.LocalDate;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.Mockito.when;\n\n@SpringBootTest\npublic class EmployeeControllerTest {\n\n    @InjectMocks\n    private EmployeeController employeeController;\n\n    @Mock\n    private EmployeeService employeeService;\n\n    @Test\n    public void testGetEmployeesBornBeforeYear() {\n        Employee emp1 = new Employee();\n        emp1.setBirthDate(LocalDate.of(1990, 1, 1));\n        Employee emp2 = new Employee();\n        emp2.setBirthDate(LocalDate.of(1995, 1, 1));\n        when(employeeService.getEmployeesBornBeforeYear(2000)).thenReturn(Arrays.asList(emp1, emp2));\n\n        List<Employee> result = employeeController.getEmployeesBornBeforeYear(2000);\n\n        assertEquals(2, result.size());\n        assertEquals(emp1, result.get(0));\n        assertEquals(emp2, result.get(1));\n    }\n}\n```",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 861,
    "completion_tokens": 943,
    "total_tokens": 1804,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
