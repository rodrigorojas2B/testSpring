{
  "id": "chatcmpl-BgFXmcIuUAZjZXm9RiqVgXJLkfZ5p",
  "object": "chat.completion",
  "created": 1749409226,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "--- CÓDIGO JAVA GENERADO ---\n\n```java\npackage com.example.EmployeeCoreApi.exception;\n\npublic class CannotDeleteEmployeeException extends RuntimeException {\n    public CannotDeleteEmployeeException(String message) {\n        super(message);\n    }\n}\n```\n\n```java\npackage com.example.EmployeeCoreApi.service.impl;\n\nimport com.example.EmployeeCoreApi.exception.CannotDeleteEmployeeException;\nimport com.example.EmployeeCoreApi.model.Employee;\nimport com.example.EmployeeCoreApi.repository.EmployeeRepository;\nimport com.example.EmployeeCoreApi.service.EmployeeService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Optional;\n\n@Service\npublic class EmployeeServiceImpl implements EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Override\n    public Employee addEmployee(Employee employee) {\n        return employeeRepository.save(employee);\n    }\n\n    @Override\n    public List<Employee> getAllEmployees() {\n        return employeeRepository.findAll();\n    }\n\n    @Override\n    public Employee getEmployeeById(Long id) {\n        Optional<Employee> optionalEmployee = employeeRepository.findById(id);\n        return optionalEmployee.orElse(null);\n    }\n\n    @Override\n    public Employee updateEmployee(Employee employee) {\n        return employeeRepository.save(employee);\n    }\n\n    // Start of AI modification for HDU-EMP-003\n    @Override\n    public void deleteEmployeeById(Long id) {\n        Optional<Employee> optionalEmployee = employeeRepository.findById(id);\n        if (optionalEmployee.isPresent()) {\n            Employee employee = optionalEmployee.get();\n            if (\"Femenino\".equalsIgnoreCase(employee.getGender())) {\n                throw new CannotDeleteEmployeeException(\"No se puede eliminar a un empleado de género femenino.\");\n            } else {\n                employeeRepository.deleteById(id);\n            }\n        } else {\n            throw new RuntimeException(\"Empleado no encontrado con id: \" + id);\n        }\n    }\n    // End of AI modification for HDU-EMP-003\n}\n```",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 895,
    "completion_tokens": 391,
    "total_tokens": 1286,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
