{
  "id": "chatcmpl-BgDIo44qbRMm1BXtaDVF9zT38hFVg",
  "object": "chat.completion",
  "created": 1749400610,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "--- CÃ“DIGO GENERADO ---\n\n```java\npackage com.example.employeecoreapi.service.impl;\n\nimport com.example.employeecoreapi.exception.CannotDeleteEmployeeException;\nimport com.example.employeecoreapi.model.Employee;\nimport com.example.employeecoreapi.repository.EmployeeRepository;\nimport com.example.employeecoreapi.service.EmployeeService;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Optional;\n\n@Service\npublic class EmployeeServiceImpl implements EmployeeService {\n\n    private final EmployeeRepository employeeRepository;\n\n    public EmployeeServiceImpl(EmployeeRepository employeeRepository) {\n        this.employeeRepository = employeeRepository;\n    }\n\n    @Override\n    public List<Employee> getAllEmployees() {\n        return employeeRepository.findAll();\n    }\n\n    @Override\n    public Employee getEmployeeById(Long id) {\n        return employeeRepository.findById(id)\n                .orElseThrow(() -> new IllegalArgumentException(\"Invalid employee Id:\" + id));\n    }\n\n    @Override\n    public Employee createEmployee(Employee employee) {\n        return employeeRepository.save(employee);\n    }\n\n    @Override\n    public Employee updateEmployee(Employee employee) {\n        return employeeRepository.save(employee);\n    }\n\n    @Override\n    public void deleteEmployeeById(Long id) {\n        Optional<Employee> employeeOptional = employeeRepository.findById(id);\n        if (employeeOptional.isPresent()) {\n            Employee employee = employeeOptional.get();\n            // Begin of modification by AI\n            if (\"Femenino\".equals(employee.getGender())) {\n                throw new CannotDeleteEmployeeException(\"Cannot delete employee of gender 'Femenino'\");\n            }\n            // End of modification by AI\n            employeeRepository.deleteById(id);\n        } else {\n            throw new IllegalArgumentException(\"Invalid employee Id:\" + id);\n        }\n    }\n}\n```\n\n```java\npackage com.example.employeecoreapi.exception;\n\npublic class CannotDeleteEmployeeException extends RuntimeException {\n\n    public CannotDeleteEmployeeException(String message) {\n        super(message);\n    }\n}\n```",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 839,
    "completion_tokens": 391,
    "total_tokens": 1230,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
