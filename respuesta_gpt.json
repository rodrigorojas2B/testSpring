{
  "id": "chatcmpl-BgEPvQ0r7Pz8shlISZg0AzzQsGJh7",
  "object": "chat.completion",
  "created": 1749404895,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "--- CÃ“DIGO GENERADO ---\n\npackage com.example.employeecoreapi.exception;\n\npublic class CannotDeleteEmployeeException extends RuntimeException {\n    public CannotDeleteEmployeeException(String message) {\n        super(message);\n    }\n}\n\n---\n\npackage com.example.employeecoreapi.service.impl;\n\nimport com.example.employeecoreapi.exception.CannotDeleteEmployeeException;\nimport com.example.employeecoreapi.model.Employee;\nimport com.example.employeecoreapi.repository.EmployeeRepository;\nimport com.example.employeecoreapi.service.EmployeeService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.Optional;\n\n@Service\npublic class EmployeeServiceImpl implements EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Override\n    public List<Employee> getAllEmployees() {\n        return employeeRepository.findAll();\n    }\n\n    @Override\n    public Optional<Employee> getEmployeeById(Long id) {\n        return employeeRepository.findById(id);\n    }\n\n    @Override\n    public Employee createEmployee(Employee employee) {\n        return employeeRepository.save(employee);\n    }\n\n    @Override\n    public Employee updateEmployee(Long id, Employee employeeDetails) {\n        Employee employee = employeeRepository.findById(id)\n                .orElseThrow(() -> new ResourceNotFoundException(\"Employee\", \"id\", id));\n        employee.setName(employeeDetails.getName());\n        employee.setGender(employeeDetails.getGender());\n        employee.setDepartment(employeeDetails.getDepartment());\n        return employeeRepository.save(employee);\n    }\n\n    @Override\n    public void deleteEmployeeById(Long id) {\n        // Start of AI modification\n        Employee employee = employeeRepository.findById(id)\n                .orElseThrow(() -> new ResourceNotFoundException(\"Employee\", \"id\", id));\n        if (employee.getGender().equalsIgnoreCase(\"Femenino\")) {\n            throw new CannotDeleteEmployeeException(\"Cannot delete employee with gender 'Femenino'\");\n        }\n        // End of AI modification\n        employeeRepository.deleteById(id);\n    }\n}",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 905,
    "completion_tokens": 394,
    "total_tokens": 1299,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
